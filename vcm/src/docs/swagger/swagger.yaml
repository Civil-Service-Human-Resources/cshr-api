swagger: '2.0'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
  termsOfService: 'urn:tos'
  contact: {}
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
host: 'localhost:8080'
basePath: /
tags:
  - name: notify-controller
    description: Notify Controller
  - name: vacancy-controller
    description: Vacancy Controller
  - name: Vacancy Service
    description: Apis relating to jobs and vacancies
  - name: department-controller
    description: Department Controller
  - name: vacancy-search-controller
    description: Vacancy Search Controller
paths:
  /department:
    get:
      tags:
        - department-controller
      summary: Find all departments
      operationId: findAllDepartments
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Department»'
    post:
      tags:
        - department-controller
      summary: Create a department
      operationId: createDepartment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: department
          description: department
          required: true
          schema:
            $ref: '#/definitions/Department'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Department'
  /department/loaddepartments:
    post:
      tags:
        - department-controller
      summary: load departments
      operationId: load
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: file
          in: formData
          description: file
          required: true
          type: file
      responses:
        '200':
          description: OK
          schema:
            type: object
  '/department/{departmentId}':
    get:
      tags:
        - department-controller
      summary: Find a specific department
      operationId: findDepartmentById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: departmentId
          in: path
          description: departmentId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Department'
    put:
      tags:
        - department-controller
      summary: Update a department
      operationId: updateDepartment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: departmentId
          in: path
          description: departmentId
          required: true
          type: integer
          format: int64
        - in: body
          name: departmentUpdate
          description: departmentUpdate
          required: true
          schema:
            $ref: '#/definitions/Department'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Department'
    delete:
      tags:
        - department-controller
      summary: Delete a department
      operationId: deleteDepartmentById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: departmentId
          in: path
          description: departmentId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Department'
  /notify:
    post:
      tags:
        - notify-controller
      summary: Sent notification code
      operationId: notify
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: notification
          description: notification
          required: true
          schema:
            $ref: '#/definitions/Notification'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Notification'
  /vacancy:
    get:
      tags:
        - vacancy-controller
      summary: Find all vacancies with support for pagination
      operationId: findAll
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Vacancy»'
    post:
      tags:
        - vacancy-controller
      summary: Create a Vacancy
      operationId: createVacancy
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: vacancy
          description: vacancy
          required: true
          schema:
            $ref: '#/definitions/Vacancy'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Vacancy'
  /vacancy/refresh:
    get:
      tags:
        - vacancy-controller
      summary: refresh
      operationId: refreshUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
  /vacancy/save:
    post:
      tags:
        - vacancy-controller
      summary: Creates a new or updates an existing vacancy
      operationId: save
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: vacancyToSave
          description: vacancyToSave
          required: true
          schema:
            $ref: '#/definitions/Vacancy'
      responses:
        '200':
          description: Request to save vacancy was successful.
          schema:
            $ref: '#/definitions/CSHRServiceStatus'
        '422':
          description: An unknown Applicant Tracking System Vendor was supplied.
          schema:
            $ref: '#/definitions/CSHRServiceStatus'
  /vacancy/search:
    post:
      tags:
        - vacancy-search-controller
      summary: Search for vacancies by location and keyword with support for pagination
      operationId: searchUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: searchParameters
          description: The values supplied to perform the search
          required: true
          schema:
            $ref: '#/definitions/VacancySearchParameters'
        - name: cshr-authentication
          in: header
          description: cshr-authentication
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SearchResponse'
        '503':
          description: The location service is unavailable.
          schema:
            $ref: '#/definitions/VacancyError'
  /vacancy/vacancymetadata:
    get:
      tags:
        - vacancy-search-controller
      summary: Get a collection vacancies with just identifier and date modified returned for each one.
      operationId: vacancymetadata
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Request to retrieve the metadata was successful
          schema:
            $ref: '#/definitions/VacancyMetadataResponse'
        '401':
          description: You are not authorised to use this service. Please supply the correct credentials or contact the system administrator if you believe they are correct.
          schema:
            $ref: '#/definitions/VacancyError'
        '500':
          description: An unexpected error occurred processing your request. Please contact the system administrator.
          schema:
            $ref: '#/definitions/VacancyError'
        '503':
          description: The service is currently unavailable and your request cannot be processed at this time. This may be a temporary condition and if it persists please contact the system administrator
          schema:
            $ref: '#/definitions/VacancyError'
  /vacancy/verifyemail:
    post:
      tags:
        - vacancy-search-controller
      summary: Generate a JWT to enable access to internal vacancies
      operationId: verifyEmailJWT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: verifyRequest
          description: verifyRequest
          required: true
          schema:
            $ref: '#/definitions/VerifyRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VerifyResponse'
  '/vacancy/{vacancyId}':
    get:
      tags:
        - vacancy-search-controller
      summary: Find a specific vacancy
      operationId: findById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: vacancyId
          in: path
          description: vacancyId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Vacancy'
        '410':
          description: Vacancy closed
          schema:
            $ref: '#/definitions/VacancyError'
    put:
      tags:
        - vacancy-controller
      summary: Update a Vacancy
      operationId: update
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: vacancyId
          in: path
          description: vacancyId
          required: true
          type: integer
          format: int64
        - in: body
          name: vacancyUpdate
          description: vacancyUpdate
          required: true
          schema:
            $ref: '#/definitions/Vacancy'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Vacancy'
    delete:
      tags:
        - vacancy-controller
      summary: Delete a Vacancy
      operationId: delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: vacancyId
          in: path
          description: vacancyId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Vacancy'
definitions:
  CSHRServiceStatus:
    type: object
    properties:
      code:
        type: string
      detail:
        type: array
        items:
          type: string
      summary:
        type: string
  Department:
    type: object
    properties:
      departmentStatus:
        type: string
        enum:
          - ACTIVE
          - DEACTIVATED
      disabilityConfidenceLevel:
        type: string
        enum:
          - EMPLOYER
          - LEADER
          - COMMITTED
      disabilityConfidenceLevelLastUpdate:
        type: string
        example: 'yyyy-MM-dd''T''HH:mm:ss.SSSZ'
      disabilityLogo:
        type: string
      id:
        type: integer
        format: int64
      identifier:
        type: string
      logoNeeded:
        type: boolean
      logoPath:
        type: string
      name:
        type: string
      parent:
        $ref: '#/definitions/Department'
  Location:
    type: object
    required:
      - place
      - radius
    properties:
      place:
        type: string
        description: the place being searched from
      radius:
        type: integer
        format: int32
        description: the distance in miles to search from the given place
    description: The parameters that make a location for search made of a place and a radius to search from this place
  Notification:
    type: object
    properties:
      email:
        type: string
      templateID:
        type: string
      notifyCode:
        type: string
  Page«Department»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Department'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      numberOfElements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        $ref: '#/definitions/Sort'
      totalElements:
        type: integer
        format: int64
      totalPages:
        type: integer
        format: int32
  Page«Vacancy»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Vacancy'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      numberOfElements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        $ref: '#/definitions/Sort'
      totalElements:
        type: integer
        format: int64
      totalPages:
        type: integer
        format: int32
  SearchResponse:
    type: object
    properties:
      authenticatedEmail:
        type: string
        description: The email which was verified to give access to non-public jobs
      cshrServiceStatus:
        description: Business status code associated with the request
        $ref: '#/definitions/CSHRServiceStatus'
      vacancies:
        description: 'The search results '
        $ref: '#/definitions/Page«Vacancy»'
      vacancyErrors:
        type: array
        description: A list of errors which may have affected the search results
        items:
          $ref: '#/definitions/VacancyError'
  Sort:
    type: object
  Vacancy:
    type: object
    properties:
      active:
        type: boolean
      applyURL:
        type: string
        description: URL linking to external system
      atsVendorIdentifier:
        type: string
      closingDate:
        type: string
        example: 'yyyy-MM-dd''T''HH:mm:ss.SSSZ'
      contactDepartment:
        type: string
      contactEmail:
        type: string
      contactName:
        type: string
      contactTelephone:
        type: string
      contractTypes:
        type: string
        example: 'FULL_TIME, PART_TIME, CONTRACT, TEMPORARY, SEASONAL, INTERNSHIP'
        description: A comma separated list of contract types
      department:
        $ref: '#/definitions/Department'
      description:
        type: string
      displayCscContent:
        type: boolean
      eligibility:
        type: string
      governmentOpeningDate:
        type: string
        example: 'yyyy-MM-dd''T''HH:mm:ss.SSSZ'
      grade:
        type: string
      id:
        type: integer
        format: int64
        description: Autogenerated on create.
        readOnly: true
      identifier:
        type: integer
        format: int64
      internalOpeningDate:
        type: string
        example: 'yyyy-MM-dd''T''HH:mm:ss.SSSZ'
      lastModified:
        type: string
        example: 'yyyy-MM-dd''T''HH:mm:ss.SSSZ'
      lengthOfEmployment:
        type: string
      locationOverride:
        type: string
      nationalityStatement:
        type: string
        enum:
          - RESERVED
          - NON_RESERVED
          - NONE
      numberVacancies:
        type: integer
        format: int32
      overseasJob:
        type: boolean
      personalSpecification:
        type: string
      publicOpeningDate:
        type: string
        example: 'yyyy-MM-dd''T''HH:mm:ss.SSSZ'
      regions:
        type: string
      responsibilities:
        type: string
      salaryMax:
        type: integer
        format: int32
      salaryMin:
        type: integer
        format: int32
      salaryOverrideDescription:
        type: string
      selectionProcessDetails:
        type: string
      shortDescription:
        type: string
      title:
        type: string
      vacancyLocations:
        type: array
        items:
          $ref: '#/definitions/VacancyLocation'
      whatWeOffer:
        type: string
      workingHours:
        type: string
      workingPatterns:
        type: string
        example: 'FLEXIBLE_WORKING, FULL_TIME, PART_TIME, JOB_SHARE, HOME_WORKING'
        description: A comma separated list of working patterns
  VacancyError:
    type: object
    properties:
      errors:
        type: array
        items:
          type: string
      message:
        type: string
      searchStatusCode:
        type: string
        enum:
          - INVALID_JWT
          - NULL_JWT
          - EXPIRED_JWT
          - JWT_NO_ELIGIBILITY_CLAIM
          - EXCEPTION
      status:
        type: string
        enum:
          - '100'
          - '101'
          - '102'
          - '103'
          - '200'
          - '201'
          - '202'
          - '203'
          - '204'
          - '205'
          - '206'
          - '207'
          - '208'
          - '226'
          - '300'
          - '301'
          - '302'
          - '303'
          - '304'
          - '305'
          - '307'
          - '308'
          - '400'
          - '401'
          - '402'
          - '403'
          - '404'
          - '405'
          - '406'
          - '407'
          - '408'
          - '409'
          - '410'
          - '411'
          - '412'
          - '413'
          - '414'
          - '415'
          - '416'
          - '417'
          - '418'
          - '419'
          - '420'
          - '421'
          - '422'
          - '423'
          - '424'
          - '426'
          - '428'
          - '429'
          - '431'
          - '451'
          - '500'
          - '501'
          - '502'
          - '503'
          - '504'
          - '505'
          - '506'
          - '507'
          - '508'
          - '509'
          - '510'
          - '511'
  VacancyLocation:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: Autogenerated on create.
        readOnly: true
      latitude:
        type: number
        format: double
      location:
        type: string
      longitude:
        type: number
        format: double
  VacancyMetadata:
    type: object
    properties:
      identifier:
        type: integer
        format: int64
      lastModified:
        type: string
        example: 'yyyy-MM-dd''T''HH:mm:ss.SSSZ'
  VacancyMetadataResponse:
    type: object
    properties:
      responseStatus:
        $ref: '#/definitions/CSHRServiceStatus'
      vacancies:
        type: array
        items:
          $ref: '#/definitions/VacancyMetadata'
  VacancySearchParameters:
    type: object
    properties:
      contractTypes:
        type: array
        example: FULL_TIME PART_TIME CONTRACT TEMPORARY SEASONAL INTERNSHIP
        description: A string array of contract types
        items:
          type: string
      department:
        type: array
        description: id of one or more departments to search vacancies for
        items:
          type: string
      keyword:
        type: string
        description: word found in title or description of vacancy
      location:
        description: location of the vacancy
        $ref: '#/definitions/Location'
      vacancyEligibility:
        type: string
        enum:
          - PUBLIC
          - INTERNAL
      workingPatterns:
        type: array
        example: FLEXIBLE_WORKING FULL_TIME PART_TIME JOB_SHARE HOME_WORKING
        description: A string array of working patterns
        items:
          type: string
      maxSalary:
        type: integer
        format: int32
      minSalary:
        type: integer
        format: int32
      overseasJob:
        type: boolean
    description: The parameters allowed for when searching for vacancies
  VerifyRequest:
    type: object
    properties:
      emailAddress:
        type: string
      departmentID:
        type: integer
        format: int64
  VerifyResponse:
    type: object
    properties:
      departments:
        type: array
        items:
          $ref: '#/definitions/Department'
      vacancyError:
        $ref: '#/definitions/VacancyError'
