version: 2
jobs:
  build:
    environment:
      - COMPOSE_FILE: "docker-compose.yml"
    machine: true
    steps:
      - checkout

      - run:
          name: Build image
          command: |
            cp .env_dev .env
            export DOCKER_SERVICE_TAG="$CIRCLE_WORKFLOW_ID"
            docker-compose build api

      - run:
          name: Login to Docker Hub
          command: docker login -u $HUB_USERNAME -p $HUB_PASSWORD

      - run:
          name: Tag and push images
          command: |
            export DOCKER_SERVICE_TAG="$CIRCLE_WORKFLOW_ID"
            docker-compose push api

  ship:
    environment:
      - COMPOSE_FILE: "docker-compose.yml"
    machine: true
    steps:
      - checkout

      - run:
          name: Login to Docker Hub
          command: docker login -u $HUB_USERNAME -p $HUB_PASSWORD

      - run:
          name: Pull Current workflow images
          command: |
            set -x
            cp .env_dev .env
            export DOCKER_SERVICE_TAG="$CIRCLE_WORKFLOW_ID"
            docker-compose pull api
            images=$(docker images | grep "$DOCKER_SERVICE_TAG" | cut -d " " -f1)
            if [ "$CIRCLE_BRANCH" == "master" ]; then
              docker_tag="latest"
            else
              docker_tag="$CIRCLE_BRANCH"
            fi
            for image in $images
            do
              docker tag "${image}":"${DOCKER_SERVICE_TAG}" "${image}":"${docker_tag}"
              docker push "${image}":"${docker_tag}"
            done

  deploy_to_uat:
    environment:
      - COMPOSE_FILE: "docker-compose.yml"
    machine: true
    steps:
      - checkout

      - run:
          name: Generate a stack file
          command: |
            cp .env_dev .env
            if [ "$CIRCLE_BRANCH" == "master" ]; then
              export DOCKER_SERVICE_TAG="latest"
            else
              export DOCKER_SERVICE_TAG="$CIRCLE_BRANCH"
            fi
            docker-compose -f docker-compose.stack.yml config > docker-stack.yml

      - add_ssh_keys

      - run:
          name: Deploy
          command: |
            scp -oStrictHostKeyChecking=no docker-stack.yml ${UAT_SSH_USER}@${UAT_HOSTNAME}:/home/${UAT_SSH_USER}/api-stack.yml
            ssh -oStrictHostKeyChecking=no ${UAT_SSH_USER}@${UAT_HOSTNAME} docker stack deploy -c /home/${UAT_SSH_USER}/api-stack.yml api


workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - ship:
          requires:
            - build
          filters:
            branches:
              only:
                - master
                - develop
      - deploy_to_uat:
          requires:
            - ship
          filters:
            branches:
              only:
                - develop